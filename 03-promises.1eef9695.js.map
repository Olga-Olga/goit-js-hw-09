{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EACAC,EACAC,EAEJ,MAAMC,EAAWC,SAASC,cAAc,SA8DxC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATkB,IAAIC,SAAQ,CAACC,EAAKC,KAC9BL,EACFI,EAAI,C,SAAEN,EAAUQ,MAAAP,IAGhBM,EAAI,C,SAAEP,EAAUQ,MAAAP,GAAQ,G,CApE9BQ,QAAQC,IAAId,GACZA,EAASe,iBAAiB,UAE1B,SAAkBC,GAChBA,EAAMC,iBAENpB,EAAQqB,OAAOF,EAAMG,OAAOC,SAASR,MAAMS,OAC3CvB,EAAOoB,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCtB,EAASmB,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OAC7C1B,EAAA6B,OAAOC,QAAQ,eAAe5B,MAAUC,MAASC,KAE/C,MAAM2B,EAAW,GAEnB,IAAK,IAAIC,EAAI,EAAGA,EAAI5B,EAAQ4B,IAAK,CAC/B,MACMC,EAAUzB,EADCwB,EAAI,EACmB9B,GACxC6B,EAASG,KAAKD,E,CAGhB,IAAIE,EAAU,EAEd,MAAMC,EAAaC,aAAY,KAC7B,GAAIF,GAAWJ,EAASO,OAEtB,YADAC,cAAcH,GAIAL,EAASI,GAEtBK,MAAK,EAAC/B,SAAEA,EAAUQ,MAAAwB,MACjBvB,QAAQwB,IAAI,YAACjC,oBAA4BgC,QACzCzC,EAAA6B,OAAOc,QAAQ,YAAClC,oBAA4BgC,OAAA,IAE7CG,OAAM,EAACnC,SAAEA,EAAUQ,MAAA4B,MAClB3B,QAAQwB,IAAI,YAACjC,oBAA4BoC,QACzC7C,EAAA6B,OAAOiB,QAAQ,YAACrC,oBAA4BoC,OAAA,IAGhDV,GAAS,GACRhC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet delay\nlet step\nlet amount\n\nconst submitEl = document.querySelector(\".form\")\nconsole.dir(submitEl);\nsubmitEl.addEventListener(\"submit\", callback)\n\nfunction callback(event) {\n  event.preventDefault()\n  // const { delay, step, amount } = event.target.elements\n  delay = Number(event.target.elements.delay.value)\n  step = Number(event.target.elements.step.value)\n  amount = Number(event.target.elements.amount.value);\n  Notify.warning(`Get valuve: ${delay}, ${step}, ${amount}`)\n\n    const promises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promise = createPromise(position, delay);\n    promises.push(promise);\n  }\n\n  let counter = 0;\n\n  const intervalID = setInterval(() => {\n    if (counter >= promises.length) {\n      clearInterval(intervalID);\n      return;\n    }\n\n    const promise = promises[counter];\n    promise\n      .then(({ position, delay }) => {\n        console.log(`✅ Промис ${position} выполнен через ${delay} мс`);\n        Notify.success(`✅ Промис ${position} выполнен через ${delay} мс`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Промис ${position} отклонен через ${delay} мс`);\n        Notify.failure(`❌ Промис ${position} отклонен через ${delay} мс`);\n      });\n\n    counter++;\n  }, step);\n}\n\n  // const setTimeoutID = setTimeout(() => {\n//     setInterval (() => {\n//     for (let i = 0; i < amount; i++) {\n//       createPromise(i, step)\n//         .then(({ position, delay }) => {\n//           console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//           Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//         })\n//         .catch(({ position, delay }) => {\n//           console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//           Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//         });\n//     }\n//   // clearTimeout(setTimeoutID)\n//   //   }, step) \n  \n//   }, delay)\n// }\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.5;  \n  const myPromise = new Promise((res, rej) => {\n    if (shouldResolve) {\n      res({ position, delay });\n    }\n    else {\n      rej({ position, delay })\n    }\n  });\n  \n  return myPromise\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$submitEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","res","rej","delay","console","dir","addEventListener","event","preventDefault","Number","target","elements","value","step","amount","Notify","warning","promises","i","promise","push","counter","intervalID","setInterval","length","clearInterval","then","delay1","log","success","catch","delay2","failure"],"version":3,"file":"03-promises.1eef9695.js.map"}