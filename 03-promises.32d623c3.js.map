{"mappings":"gfAAA,IAEIA,EACAC,EACAC,EAJJC,EAAAC,EAAA,SAMMC,EAAWC,SAASC,cAAc,SA8DxC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATkB,IAAIC,SAAQ,SAACC,EAAKC,GAC9BL,EACFI,EAAI,CAAEN,WAAUQ,MAAAP,IAGhBM,EAAI,CAAEP,WAAUQ,MAAAP,G,IApEtBQ,QAAQC,IAAId,GACZA,EAASe,iBAAiB,UAE1B,SAAkBC,GAChBA,EAAMC,iBAENtB,EAAQuB,OAAOF,EAAMG,OAAOC,SAASR,MAAMS,OAC3CzB,EAAOsB,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCxB,EAASqB,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OAC7CvB,EAAA0B,OAAOC,QAAQ,eAAyBC,OAAV/B,EAAM,MAAa+B,OAAT9B,EAAK,MAAW8B,OAAP7B,IAIjD,IAFE,IAAM8B,EAAW,GAEVC,EAAI,EAAGA,EAAI/B,EAAQ+B,IAAK,CAC/B,IACMC,EAAU1B,EADCyB,EAAI,EACmBjC,GACxCgC,EAASG,KAAKD,E,CAGhB,IAAIE,EAAU,EAERC,EAAaC,aAAY,WACzBF,GAAWJ,EAASO,OACtBC,cAAcH,IAIAL,EAASI,GAEtBK,MAAK,SAAAC,G,IAAGjC,EAAQiC,EAARjC,SAAUkC,EAAKD,EAALzB,MACjBC,QAAQ0B,IAAI,YAA+Cb,OAA3BtB,EAAS,oBAAqCsB,OAANY,EAAM,QAC9ExC,EAAA0B,OAAOgB,QAAQ,YAA+Cd,OAA3BtB,EAAS,oBAAqCsB,OAANY,EAAM,O,IAElFG,OAAM,SAAAJ,G,IAAGjC,EAAQiC,EAARjC,SAAUsC,EAAKL,EAALzB,MAClBC,QAAQ0B,IAAI,YAA+Cb,OAA3BtB,EAAS,oBAAqCsB,OAANgB,EAAM,QAC9E5C,EAAA0B,OAAOmB,QAAQ,YAA+CjB,OAA3BtB,EAAS,oBAAqCsB,OAANgB,EAAM,O,IAGrFX,I,GACCnC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet delay\nlet step\nlet amount\n\nconst submitEl = document.querySelector(\".form\")\nconsole.dir(submitEl);\nsubmitEl.addEventListener(\"submit\", callback)\n\nfunction callback(event) {\n  event.preventDefault()\n  // const { delay, step, amount } = event.target.elements\n  delay = Number(event.target.elements.delay.value)\n  step = Number(event.target.elements.step.value)\n  amount = Number(event.target.elements.amount.value);\n  Notify.warning(`Get valuve: ${delay}, ${step}, ${amount}`)\n\n    const promises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promise = createPromise(position, delay);\n    promises.push(promise);\n  }\n\n  let counter = 0;\n\n  const intervalID = setInterval(() => {\n    if (counter >= promises.length) {\n      clearInterval(intervalID);\n      return;\n    }\n\n    const promise = promises[counter];\n    promise\n      .then(({ position, delay }) => {\n        console.log(`✅ Промис ${position} выполнен через ${delay} мс`);\n        Notify.success(`✅ Промис ${position} выполнен через ${delay} мс`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Промис ${position} отклонен через ${delay} мс`);\n        Notify.failure(`❌ Промис ${position} отклонен через ${delay} мс`);\n      });\n\n    counter++;\n  }, step);\n}\n\n  // const setTimeoutID = setTimeout(() => {\n//     setInterval (() => {\n//     for (let i = 0; i < amount; i++) {\n//       createPromise(i, step)\n//         .then(({ position, delay }) => {\n//           console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//           Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//         })\n//         .catch(({ position, delay }) => {\n//           console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//           Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//         });\n//     }\n//   // clearTimeout(setTimeoutID)\n//   //   }, step) \n  \n//   }, delay)\n// }\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.5;  \n  const myPromise = new Promise((res, rej) => {\n    if (shouldResolve) {\n      res({ position, delay });\n    }\n    else {\n      rej({ position, delay })\n    }\n  });\n  \n  return myPromise\n}\n"],"names":["$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$submitEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","res","rej","delay","console","dir","addEventListener","event","preventDefault","Number","target","elements","value","step","amount","Notify","warning","concat","promises","i","promise","push","counter","intervalID","setInterval","length","clearInterval","then","param","delay1","log","success","catch","delay2","failure"],"version":3,"file":"03-promises.32d623c3.js.map"}