{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EACAC,EACAC,EAEJ,MAAMC,EAAWC,SAASC,cAAc,SA4BxC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATkB,IAAIC,SAAQ,CAACC,EAAKC,KAC9BL,EACFI,EAAI,C,SAAEN,EAAUQ,MAAAP,IAGhBM,EAAI,C,SAAEP,EAAUQ,MAAAP,GAAQ,G,CAlC9BQ,QAAQC,IAAId,GACZA,EAASe,iBAAiB,UAE1B,SAAkBC,GAChBA,EAAMC,iBAENpB,EAAQqB,OAAOF,EAAMG,OAAOC,SAASR,MAAMS,OAC3CvB,EAAOoB,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCtB,EAASmB,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OAC7C1B,EAAA6B,OAAOC,QAAQ,eAAe5B,MAAUC,MAASC,KACjD2B,YAAW,KAEX,IAAK,IAAIC,EAAI,EAAGA,EAAI5B,EAAQ4B,IACxBxB,EAAcwB,EAAG7B,GACd8B,MAAK,EAACxB,SAAEA,EAAUQ,MAAAiB,MACjBhB,QAAQiB,IAAI,uBAAqB1B,QAAiByB,OAClDlC,EAAA6B,OAAOO,QAAQ,uBAAqB3B,QAAiByB,MAAU,IAEhEG,OAAM,EAAC5B,SAAEA,EAAUQ,MAAAqB,MAClBpB,QAAQiB,IAAI,sBAAoB1B,QAAiB6B,OACjDtC,EAAA6B,OAAOU,QAAQ,sBAAoB9B,QAAe6B,MAAU,GAC5D,GAGLpC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet delay\nlet step\nlet amount\n\nconst submitEl = document.querySelector(\".form\")\nconsole.dir(submitEl);\nsubmitEl.addEventListener(\"submit\", callback)\n\nfunction callback(event) {\n  event.preventDefault()\n  // const { delay, step, amount } = event.target.elements\n  delay = Number(event.target.elements.delay.value)\n  step = Number(event.target.elements.step.value)\n  amount = Number(event.target.elements.amount.value);\n  Notify.warning(`Get valuve: ${delay}, ${step}, ${amount}`)\n  setTimeout(() => {\n\n  for (let i = 0; i < amount; i++) {    \n      createPromise(i, step)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n  }\n    \n  }, delay)\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;  \n  const myPromise = new Promise((res, rej) => {\n    if (shouldResolve) {\n      res({ position, delay });\n    }\n    else {\n      rej({ position, delay })\n    }\n  });\n  \n  return myPromise\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$submitEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","res","rej","delay","console","dir","addEventListener","event","preventDefault","Number","target","elements","value","step","amount","Notify","warning","setTimeout","i","then","delay1","log","success","catch","delay2","failure"],"version":3,"file":"03-promises.9d491bc2.js.map"}